[2014-11-07 09:01:42,191] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,225] INFO Property broker.id is overridden to 0 (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,226] INFO Property log.cleaner.enable is overridden to false (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,227] INFO Property log.dirs is overridden to /tmp/kafka-logs (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,227] INFO Property log.retention.check.interval.ms is overridden to 60000 (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,228] INFO Property log.retention.hours is overridden to 168 (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,228] INFO Property log.segment.bytes is overridden to 536870912 (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,229] INFO Property num.io.threads is overridden to 8 (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,229] INFO Property num.network.threads is overridden to 2 (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,229] INFO Property num.partitions is overridden to 2 (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,230] INFO Property port is overridden to 9092 (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,230] INFO Property socket.receive.buffer.bytes is overridden to 1048576 (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,231] INFO Property socket.request.max.bytes is overridden to 104857600 (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,231] INFO Property socket.send.buffer.bytes is overridden to 1048576 (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,231] INFO Property zookeeper.connect is overridden to localhost:2181 (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,232] INFO Property zookeeper.connection.timeout.ms is overridden to 1000000 (kafka.utils.VerifiableProperties)
[2014-11-07 09:01:42,246] INFO [Kafka Server 0], starting (kafka.server.KafkaServer)
[2014-11-07 09:01:42,248] INFO [Kafka Server 0], Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2014-11-07 09:01:42,553] INFO Log directory '/tmp/kafka-logs' not found, creating it. (kafka.log.LogManager)
[2014-11-07 09:01:42,561] INFO Starting log cleanup with a period of 60000 ms. (kafka.log.LogManager)
[2014-11-07 09:01:42,566] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2014-11-07 09:01:42,601] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2014-11-07 09:01:42,603] INFO [Socket Server on Broker 0], Started (kafka.network.SocketServer)
[2014-11-07 09:01:42,672] INFO Will not load MX4J, mx4j-tools.jar is not in the classpath (kafka.utils.Mx4jLoader$)
[2014-11-07 09:01:42,703] INFO 0 successfully elected as leader (kafka.server.ZookeeperLeaderElector)
[2014-11-07 09:01:42,822] INFO Registered broker 0 at path /brokers/ids/0 with address daniel-HP-Pavilion-dv7-Notebook-PC:9092. (kafka.utils.ZkUtils$)
[2014-11-07 09:01:42,833] INFO [Kafka Server 0], started (kafka.server.KafkaServer)
[2014-11-07 09:01:42,876] INFO New leader is 0 (kafka.server.ZookeeperLeaderElector$LeaderChangeListener)
[2014-11-07 09:04:14,090] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions [testPrueba,0] (kafka.server.ReplicaFetcherManager)
[2014-11-07 09:04:14,112] INFO Completed load of log testPrueba-0 with log end offset 0 (kafka.log.Log)
[2014-11-07 09:04:14,115] INFO Created log for partition [testPrueba,0] in /tmp/kafka-logs with properties {segment.index.bytes -> 10485760, file.delete.delay.ms -> 60000, segment.bytes -> 536870912, flush.ms -> 9223372036854775807, delete.retention.ms -> 86400000, index.interval.bytes -> 4096, retention.bytes -> -1, cleanup.policy -> delete, segment.ms -> 604800000, max.message.bytes -> 1000012, flush.messages -> 9223372036854775807, min.cleanable.dirty.ratio -> 0.5, retention.ms -> 604800000}. (kafka.log.LogManager)
[2014-11-07 09:04:14,116] WARN Partition [testPrueba,0] on broker 0: No checkpointed highwatermark is found for partition [testPrueba,0] (kafka.cluster.Partition)
[2014-11-07 09:09:46,896] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2014-11-07 09:10:23,388] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2014-11-07 09:24:58,808] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2014-11-07 09:24:58,809] INFO [Kafka Server 0], shutting down (kafka.server.KafkaServer)
[2014-11-07 09:24:58,810] INFO [Socket Server on Broker 0], Shutting down (kafka.network.SocketServer)
[2014-11-07 09:24:58,811] ERROR Closing socket for /127.0.0.1 because of error (kafka.network.Processor)
java.io.IOException: Broken pipe
	at sun.nio.ch.FileDispatcherImpl.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:47)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:470)
	at kafka.api.TopicDataSend.writeTo(FetchResponse.scala:122)
	at kafka.network.MultiSend.writeTo(Transmission.scala:101)
	at kafka.api.FetchResponseSend.writeTo(FetchResponse.scala:219)
	at kafka.network.Processor.write(SocketServer.scala:375)
	at kafka.network.Processor.run(SocketServer.scala:247)
	at java.lang.Thread.run(Thread.java:745)
[2014-11-07 09:24:58,815] INFO [Socket Server on Broker 0], Shutdown completed (kafka.network.SocketServer)
[2014-11-07 09:24:58,816] INFO [Kafka Request Handler on Broker 0], shutting down (kafka.server.KafkaRequestHandlerPool)
[2014-11-07 09:24:58,818] INFO [Kafka Request Handler on Broker 0], shut down completely (kafka.server.KafkaRequestHandlerPool)
[2014-11-07 09:24:59,050] INFO [Replica Manager on Broker 0]: Shut down (kafka.server.ReplicaManager)
[2014-11-07 09:24:59,051] INFO [ReplicaFetcherManager on broker 0] shutting down (kafka.server.ReplicaFetcherManager)
[2014-11-07 09:24:59,054] INFO [ReplicaFetcherManager on broker 0] shutdown completed (kafka.server.ReplicaFetcherManager)
[2014-11-07 09:24:59,056] INFO [Replica Manager on Broker 0]: Shutted down completely (kafka.server.ReplicaManager)
[2014-11-07 09:24:59,193] INFO [Kafka Server 0], shut down completed (kafka.server.KafkaServer)
[2014-11-07 09:45:37,041] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,066] INFO Property broker.id is overridden to 0 (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,066] INFO Property log.cleaner.enable is overridden to false (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,067] INFO Property log.dirs is overridden to /tmp/kafka-logs (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,067] INFO Property log.retention.check.interval.ms is overridden to 60000 (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,067] INFO Property log.retention.hours is overridden to 168 (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,067] INFO Property log.segment.bytes is overridden to 536870912 (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,067] INFO Property num.io.threads is overridden to 8 (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,068] INFO Property num.network.threads is overridden to 2 (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,068] INFO Property num.partitions is overridden to 2 (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,068] INFO Property port is overridden to 9092 (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,068] INFO Property socket.receive.buffer.bytes is overridden to 1048576 (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,068] INFO Property socket.request.max.bytes is overridden to 104857600 (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,069] INFO Property socket.send.buffer.bytes is overridden to 1048576 (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,069] INFO Property zookeeper.connect is overridden to localhost:2181 (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,069] INFO Property zookeeper.connection.timeout.ms is overridden to 1000000 (kafka.utils.VerifiableProperties)
[2014-11-07 09:45:37,082] INFO [Kafka Server 0], starting (kafka.server.KafkaServer)
[2014-11-07 09:45:37,083] INFO [Kafka Server 0], Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2014-11-07 09:45:37,410] INFO Found clean shutdown file. Skipping recovery for all logs in data directory '/tmp/kafka-logs' (kafka.log.LogManager)
[2014-11-07 09:45:37,411] INFO Loading log 'testPrueba-0' (kafka.log.LogManager)
[2014-11-07 09:45:37,444] INFO Completed load of log testPrueba-0 with log end offset 5 (kafka.log.Log)
[2014-11-07 09:45:37,458] INFO Starting log cleanup with a period of 60000 ms. (kafka.log.LogManager)
[2014-11-07 09:45:37,461] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2014-11-07 09:45:37,477] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2014-11-07 09:45:37,478] INFO [Socket Server on Broker 0], Started (kafka.network.SocketServer)
[2014-11-07 09:45:37,554] INFO Will not load MX4J, mx4j-tools.jar is not in the classpath (kafka.utils.Mx4jLoader$)
[2014-11-07 09:45:37,581] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} stored data: {"version":1,"brokerid":0,"timestamp":"1415361702676"} (kafka.utils.ZkUtils$)
[2014-11-07 09:45:37,595] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364337558"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:45:43,605] INFO 0 successfully elected as leader (kafka.server.ZookeeperLeaderElector)
[2014-11-07 09:45:43,777] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:45:43,786] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:45:43,786] INFO Registered broker 0 at path /brokers/ids/0 with address daniel-HP-Pavilion-dv7-Notebook-PC:9092. (kafka.utils.ZkUtils$)
[2014-11-07 09:45:43,798] INFO [Kafka Server 0], started (kafka.server.KafkaServer)
[2014-11-07 09:45:49,796] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:45:49,807] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:45:55,818] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:45:55,827] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:46:01,833] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:46:01,843] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:46:07,849] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:46:07,856] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:46:13,862] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:46:13,869] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:46:19,879] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:46:19,888] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:46:25,898] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:46:25,906] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:46:31,912] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:46:31,919] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:46:37,929] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:46:37,937] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:46:43,947] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:46:43,955] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:46:49,966] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:46:49,974] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:46:55,980] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:46:55,987] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:47:01,993] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:47:01,998] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:47:03,923] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2014-11-07 09:47:04,093] INFO Closing socket connection to /127.0.0.1. (kafka.network.Processor)
[2014-11-07 09:47:08,004] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:47:08,009] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:47:14,015] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:47:14,020] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:47:20,030] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:47:20,036] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:47:26,046] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:47:26,052] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:47:32,061] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:47:32,066] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:47:38,068] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:47:38,071] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:47:44,081] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:47:44,087] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:47:50,091] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:47:50,093] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:47:56,097] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:47:56,099] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:48:02,101] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:48:02,103] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:48:08,105] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:48:08,109] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:48:14,112] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:48:14,115] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:48:20,121] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:48:20,127] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:48:26,131] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:48:26,133] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:48:32,143] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:48:32,150] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:48:38,160] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:48:38,166] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:48:44,169] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:48:44,173] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:48:50,177] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:48:50,182] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:48:56,192] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:48:56,198] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:49:02,204] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:49:02,208] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:49:08,214] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:49:08,219] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:49:14,226] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:49:14,229] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:49:20,236] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:49:20,239] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:49:26,249] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:49:26,254] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:49:32,264] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:49:32,270] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:49:38,280] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:49:38,282] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:49:44,292] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:49:44,297] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:49:50,304] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:49:50,309] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:49:56,317] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:49:56,322] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:50:02,332] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:50:02,336] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:50:08,346] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:50:08,351] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:50:14,357] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:50:14,363] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:50:20,368] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:50:20,374] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:50:26,384] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:50:26,389] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:50:32,399] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:50:32,405] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:50:38,414] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:50:38,420] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:50:44,430] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:50:44,436] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:50:50,441] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:50:50,443] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:50:56,452] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:50:56,455] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:51:02,465] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:51:02,470] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:51:08,480] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:51:08,485] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:51:14,492] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:51:14,494] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:51:20,499] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:51:20,503] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:51:26,513] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:51:26,518] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:51:32,529] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:51:32,534] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:51:38,543] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:51:38,547] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:51:44,558] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:51:44,563] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:51:50,572] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:51:50,577] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:51:56,586] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:51:56,591] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:52:02,600] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:52:02,605] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:52:08,609] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:52:08,610] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:52:14,619] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:52:14,624] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:52:20,630] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:52:20,635] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:52:26,642] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:52:26,643] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:52:32,648] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:52:32,651] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:52:38,655] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:52:38,661] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:52:44,664] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:52:44,666] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:52:51,740] INFO [Kafka Server 0], shutting down (kafka.server.KafkaServer)
[2014-11-07 09:52:51,743] INFO [Socket Server on Broker 0], Shutting down (kafka.network.SocketServer)
[2014-11-07 09:52:51,751] INFO [Socket Server on Broker 0], Shutdown completed (kafka.network.SocketServer)
[2014-11-07 09:52:51,752] INFO [Kafka Request Handler on Broker 0], shutting down (kafka.server.KafkaRequestHandlerPool)
[2014-11-07 09:52:51,756] INFO [Kafka Request Handler on Broker 0], shut down completely (kafka.server.KafkaRequestHandlerPool)
[2014-11-07 09:52:52,087] INFO [Replica Manager on Broker 0]: Shut down (kafka.server.ReplicaManager)
[2014-11-07 09:52:52,088] INFO [ReplicaFetcherManager on broker 0] shutting down (kafka.server.ReplicaFetcherManager)
[2014-11-07 09:52:52,089] INFO [ReplicaFetcherManager on broker 0] shutdown completed (kafka.server.ReplicaFetcherManager)
[2014-11-07 09:52:52,092] INFO [Replica Manager on Broker 0]: Shutted down completely (kafka.server.ReplicaManager)
[2014-11-07 09:53:02,975] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:53:02,980] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:53:05,412] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,437] INFO Property broker.id is overridden to 0 (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,437] INFO Property log.cleaner.enable is overridden to false (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,438] INFO Property log.dirs is overridden to /tmp/kafka-logs (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,438] INFO Property log.retention.check.interval.ms is overridden to 60000 (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,438] INFO Property log.retention.hours is overridden to 168 (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,438] INFO Property log.segment.bytes is overridden to 536870912 (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,439] INFO Property num.io.threads is overridden to 8 (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,439] INFO Property num.network.threads is overridden to 2 (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,439] INFO Property num.partitions is overridden to 2 (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,439] INFO Property port is overridden to 9092 (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,440] INFO Property socket.receive.buffer.bytes is overridden to 1048576 (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,440] INFO Property socket.request.max.bytes is overridden to 104857600 (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,440] INFO Property socket.send.buffer.bytes is overridden to 1048576 (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,440] INFO Property zookeeper.connect is overridden to localhost:2181 (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,440] INFO Property zookeeper.connection.timeout.ms is overridden to 1000000 (kafka.utils.VerifiableProperties)
[2014-11-07 09:53:05,453] INFO [Kafka Server 0], starting (kafka.server.KafkaServer)
[2014-11-07 09:53:05,454] INFO [Kafka Server 0], Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2014-11-07 09:53:05,683] INFO Found clean shutdown file. Skipping recovery for all logs in data directory '/tmp/kafka-logs' (kafka.log.LogManager)
[2014-11-07 09:53:05,684] INFO Loading log 'testPrueba-0' (kafka.log.LogManager)
[2014-11-07 09:53:05,706] INFO Completed load of log testPrueba-0 with log end offset 5 (kafka.log.Log)
[2014-11-07 09:53:05,717] INFO Starting log cleanup with a period of 60000 ms. (kafka.log.LogManager)
[2014-11-07 09:53:05,720] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2014-11-07 09:53:05,732] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2014-11-07 09:53:05,733] INFO [Socket Server on Broker 0], Started (kafka.network.SocketServer)
[2014-11-07 09:53:05,795] INFO Will not load MX4J, mx4j-tools.jar is not in the classpath (kafka.utils.Mx4jLoader$)
[2014-11-07 09:53:05,819] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364785798"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:53:05,831] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364785798"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:53:08,990] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364343774"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:53:09,009] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364343774"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:53:11,839] INFO conflict in /controller data: {"version":1,"brokerid":0,"timestamp":"1415364785798"} stored data: {"version":1,"brokerid":0,"timestamp":"1415364337558"} (kafka.utils.ZkUtils$)
[2014-11-07 09:53:11,844] INFO I wrote this conflicted ephemeral node [{"version":1,"brokerid":0,"timestamp":"1415364785798"}] at /controller a while back in a different session, hence I will backoff for this node to be deleted by Zookeeper and retry (kafka.utils.ZkUtils$)
[2014-11-07 09:53:13,376] INFO [Kafka Server 0], shutting down (kafka.server.KafkaServer)
[2014-11-07 09:53:13,377] INFO [Socket Server on Broker 0], Shutting down (kafka.network.SocketServer)
[2014-11-07 09:53:13,382] INFO [Socket Server on Broker 0], Shutdown completed (kafka.network.SocketServer)
[2014-11-07 09:53:13,383] INFO [Kafka Request Handler on Broker 0], shutting down (kafka.server.KafkaRequestHandlerPool)
[2014-11-07 09:53:13,408] INFO [Kafka Request Handler on Broker 0], shut down completely (kafka.server.KafkaRequestHandlerPool)
[2014-11-07 09:53:13,801] INFO [Replica Manager on Broker 0]: Shut down (kafka.server.ReplicaManager)
[2014-11-07 09:53:13,802] INFO [ReplicaFetcherManager on broker 0] shutting down (kafka.server.ReplicaFetcherManager)
[2014-11-07 09:53:13,805] INFO [ReplicaFetcherManager on broker 0] shutdown completed (kafka.server.ReplicaFetcherManager)
[2014-11-07 09:53:13,808] INFO [Replica Manager on Broker 0]: Shutted down completely (kafka.server.ReplicaManager)
